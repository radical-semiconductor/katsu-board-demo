on:
  release:
    types: [created]

name: Add Prebuilt OpenSSL to Release
jobs:
  openssl-release-build:
    name: Build and Zip OpenSSL for ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "linux"
            vm-image: "ubuntu-latest"
            openssl-buildtarget: "linux-x86_64"
            openssl-configargs: "-lm"
            openssl-make: "make"
            openssl-makeargs: "-j2"
          - platform: "macos"
            vm-image: "macos-latest"
            openssl-buildtarget: "darwin64-x86_64-cc"
            openssl-configargs: ""
            openssl-make: "make"
            openssl-makeargs: "-j"
          - platform: "windows"
            vm-image: "windows-latest"
            openssl-buildtarget: "VC-WIN64A"
            openssl-configargs: ""
            openssl-make: "nmake"
            openssl-makeargs: ""

    runs-on: ${{ matrix.vm-image }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: seanmiddleditch/gha-setup-ninja@master
    - uses: shogo82148/actions-setup-perl@v1
      if: ${{ matrix.platform == 'windows' }}
    - uses: ilammy/msvc-dev-cmd@v1
      if: ${{ matrix.platform == 'windows' }}
      with:
        arch: win64
    - uses: ilammy/setup-nasm@v1
      if: ${{ matrix.platform == 'windows' }}
      with:
        platform: win64

    - name: Build liboqs
      working-directory: ./liboqs
      run: |
        mkdir build && cd build
        cmake -GNinja -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/openssl/oqs" ..
        ninja
        ninja install

    - name: Configure OpenSSl for ${{ matrix.platform }}
      working-directory: ./openssl
      run: |
        perl Configure no-shared ${{ matrix.openssl-buildtarget }} ${{ matrix.openssl-configargs }} --prefix="${{ github.workspace }}/openssl-output"

    - name: Build OpenSSl for ${{ matrix.platform }}
      working-directory: ./openssl
      run: |
        ${{ matrix.openssl-make }} ${{ matrix.openssl-makeargs }}

    - name: Install OpenSSl for ${{ matrix.platform }}
      working-directory: ./openssl
      run: |
        ${{ matrix.openssl-make }} ${{ matrix.openssl-makeargs }} install_sw install_ssldirs

    - name: List OpenSSL Artifacts for ${{ matrix.platform }}
      run: ls -alR "${{ github.workspace }}/openssl-output"

    - name: Zip OpenSSL Artifacts for ${{ matrix.platform }}
      uses: TheDoctor0/zip-release@0.6.2
      with:
        filename: openssl.${{ matrix.openssl-buildtarget }}.tar.gz
        path: openssl-output
        directory: ${{ github.workspace }}
        type: tar

    - name: Upload OpenSSL Release Archive for ${{ matrix.platform }}
      uses: Guerra24/upload-to-release@v1
      with:
        name: openssl.${{ matrix.openssl-buildtarget }}.tar.gz
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        path: ${{ github.workspace }}/openssl.${{ matrix.openssl-buildtarget }}.tar.gz
        content-type: application/gzip
