# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mcp.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tmcp.proto\x12\x0bradical.mcp\"\x10\n\x0e\x43onnectCommand\"7\n\x0f\x43onnectResponse\x12\x11\n\tconnected\x18\x01 \x01(\x08\x12\x11\n\tdevice_id\x18\x02 \x01(\r\"y\n\tUsageData\x12\x0e\n\x06\x63ycles\x18\x01 \x01(\x02\x12\x0f\n\x07seconds\x18\x02 \x01(\x02\x12\x10\n\x08power_io\x18\x03 \x01(\x02\x12\x11\n\tpower_hci\x18\x04 \x01(\x02\x12\x12\n\npower_main\x18\x05 \x01(\x02\x12\x12\n\npower_core\x18\x06 \x01(\x02\"\xf5\x04\n\x07\x43ommand\x12*\n\x05reset\x18\x01 \x01(\x0b\x32\x19.radical.mcp.ResetCommandH\x00\x12\x34\n\ndiagnostic\x18\x02 \x01(\x0b\x32\x1e.radical.mcp.DiagnosticCommandH\x00\x12&\n\x03key\x18\x03 \x01(\x0b\x32\x17.radical.mcp.KeyCommandH\x00\x12/\n\x06inject\x18\x04 \x01(\x0b\x32\x1d.radical.mcp.KeyInjectCommandH\x00\x12+\n\x03ntt\x18\x05 \x01(\x0b\x32\x1c.radical.mcp.KyberNTTCommandH\x00\x12+\n\x03sbm\x18\x06 \x01(\x0b\x32\x1c.radical.mcp.SaberSBMCommandH\x00\x12,\n\x06keygen\x18\x07 \x01(\x0b\x32\x1a.radical.mcp.KeygenCommandH\x00\x12\x31\n\x06\x65ncaps\x18\x08 \x01(\x0b\x32\x1f.radical.mcp.EncapsulateCommandH\x00\x12\x31\n\x06\x64\x65\x63\x61ps\x18\t \x01(\x0b\x32\x1f.radical.mcp.DecapsulateCommandH\x00\x12(\n\x04sign\x18\n \x01(\x0b\x32\x18.radical.mcp.SignCommandH\x00\x12,\n\x06verify\x18\x0b \x01(\x0b\x32\x1a.radical.mcp.VerifyCommandH\x00\x12.\n\x07\x65ncrypt\x18\x0c \x01(\x0b\x32\x1b.radical.mcp.EncryptCommandH\x00\x12.\n\x07\x64\x65\x63rypt\x18\r \x01(\x0b\x32\x1b.radical.mcp.DecryptCommandH\x00\x42\t\n\x07\x63ommand\"\x0e\n\x0cResetCommand\"\x0f\n\rResetResponse\"\'\n\x11\x44iagnosticCommand\x12\x12\n\ndiagnostic\x18\x01 \x01(\r\"[\n\x12\x44iagnosticResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12%\n\x05usage\x18\x03 \x01(\x0b\x32\x16.radical.mcp.UsageData\"+\n\nKeyCommand\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\x10\n\x08slot_num\x18\x02 \x01(\r\"E\n\x0bKeyResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12%\n\x05usage\x18\x02 \x01(\x0b\x32\x16.radical.mcp.UsageData\"$\n\x10KeyInjectCommand\x12\x10\n\x08slot_num\x18\x01 \x01(\r\"K\n\x11KeyInjectResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12%\n\x05usage\x18\x02 \x01(\x0b\x32\x16.radical.mcp.UsageData\"\x1f\n\x0fKyberNTTCommand\x12\x0c\n\x04poly\x18\x01 \x03(\r\"I\n\x10KyberNTTResponse\x12\x0e\n\x06result\x18\x01 \x03(\r\x12%\n\x05usage\x18\x02 \x01(\x0b\x32\x16.radical.mcp.UsageData\"E\n\x0fSaberSBMCommand\x12\x0e\n\x06poly_a\x18\x01 \x03(\r\x12\x0e\n\x06poly_b\x18\x02 \x03(\r\x12\x12\n\npost_round\x18\x03 \x01(\x08\"I\n\x10SaberSBMResponse\x12\x0e\n\x06result\x18\x01 \x03(\r\x12%\n\x05usage\x18\x02 \x01(\x0b\x32\x16.radical.mcp.UsageData\"D\n\rKeygenCommand\x12!\n\x03\x61lg\x18\x01 \x01(\x0e\x32\x14.radical.mcp.KeyType\x12\x10\n\x08key_slot\x18\x02 \x01(\r\"7\n\x0eKeygenResponse\x12%\n\x05usage\x18\x01 \x01(\x0b\x32\x16.radical.mcp.UsageData\"Q\n\x12\x45ncapsulateCommand\x12\x14\n\x0cpub_key_slot\x18\x01 \x01(\r\x12%\n\x07kem_alg\x18\x02 \x01(\x0e\x32\x14.radical.mcp.KeyType\"P\n\x13\x45ncapsulateResponse\x12\x12\n\nencaps_key\x18\x01 \x01(\x0c\x12%\n\x05usage\x18\x02 \x01(\x0b\x32\x16.radical.mcp.UsageData\"b\n\x12\x44\x65\x63\x61psulateCommand\x12\x15\n\rpriv_key_slot\x18\x01 \x01(\r\x12!\n\x03kem\x18\x02 \x01(\x0e\x32\x14.radical.mcp.KeyType\x12\x12\n\nencaps_key\x18\x03 \x01(\x0c\"P\n\x13\x44\x65\x63\x61psulateResponse\x12\x12\n\ndecaps_key\x18\x01 \x01(\x0c\x12%\n\x05usage\x18\x02 \x01(\x0b\x32\x16.radical.mcp.UsageData\"X\n\x0bSignCommand\x12\x15\n\rpriv_key_slot\x18\x01 \x01(\r\x12%\n\x07sig_alg\x18\x02 \x01(\x0e\x32\x14.radical.mcp.KeyType\x12\x0b\n\x03msg\x18\x03 \x01(\x0c\"B\n\x0cSignResponse\x12\x0b\n\x03sig\x18\x01 \x01(\x0c\x12%\n\x05usage\x18\x02 \x01(\x0b\x32\x16.radical.mcp.UsageData\"f\n\rVerifyCommand\x12\x14\n\x0cpub_key_slot\x18\x01 \x01(\r\x12%\n\x07sig_alg\x18\x02 \x01(\x0e\x32\x14.radical.mcp.KeyType\x12\x0b\n\x03msg\x18\x03 \x01(\x0c\x12\x0b\n\x03sig\x18\x04 \x01(\x0c\"I\n\x0eVerifyResponse\x12\x10\n\x08verified\x18\x01 \x01(\x08\x12%\n\x05usage\x18\x02 \x01(\x0b\x32\x16.radical.mcp.UsageData\"*\n\x0e\x45ncryptCommand\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\x0b\n\x03msg\x18\x02 \x01(\x0c\"I\n\x0f\x45ncryptResponse\x12\x0f\n\x07\x65nc_msg\x18\x01 \x01(\x0c\x12%\n\x05usage\x18\x02 \x01(\x0b\x32\x16.radical.mcp.UsageData\".\n\x0e\x44\x65\x63ryptCommand\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\x0f\n\x07\x65nc_msg\x18\x02 \x01(\x0c\"V\n\x0f\x44\x65\x63ryptResponse\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\x0f\n\x07\x64\x65\x63_msg\x18\x02 \x01(\x0c\x12%\n\x05usage\x18\x03 \x01(\x0b\x32\x16.radical.mcp.UsageData*M\n\x07KeyType\x12\t\n\x05SABER\x10\x00\x12\t\n\x05KYBER\x10\x01\x12\x08\n\x04NTRU\x10\x02\x12\r\n\tDILITHIUM\x10\x03\x12\n\n\x06\x46\x41LCON\x10\x04\x12\x07\n\x03\x41\x45S\x10\x05\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'mcp_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _KEYTYPE._serialized_start=2574
  _KEYTYPE._serialized_end=2651
  _CONNECTCOMMAND._serialized_start=26
  _CONNECTCOMMAND._serialized_end=42
  _CONNECTRESPONSE._serialized_start=44
  _CONNECTRESPONSE._serialized_end=99
  _USAGEDATA._serialized_start=101
  _USAGEDATA._serialized_end=222
  _COMMAND._serialized_start=225
  _COMMAND._serialized_end=854
  _RESETCOMMAND._serialized_start=856
  _RESETCOMMAND._serialized_end=870
  _RESETRESPONSE._serialized_start=872
  _RESETRESPONSE._serialized_end=887
  _DIAGNOSTICCOMMAND._serialized_start=889
  _DIAGNOSTICCOMMAND._serialized_end=928
  _DIAGNOSTICRESPONSE._serialized_start=930
  _DIAGNOSTICRESPONSE._serialized_end=1021
  _KEYCOMMAND._serialized_start=1023
  _KEYCOMMAND._serialized_end=1066
  _KEYRESPONSE._serialized_start=1068
  _KEYRESPONSE._serialized_end=1137
  _KEYINJECTCOMMAND._serialized_start=1139
  _KEYINJECTCOMMAND._serialized_end=1175
  _KEYINJECTRESPONSE._serialized_start=1177
  _KEYINJECTRESPONSE._serialized_end=1252
  _KYBERNTTCOMMAND._serialized_start=1254
  _KYBERNTTCOMMAND._serialized_end=1285
  _KYBERNTTRESPONSE._serialized_start=1287
  _KYBERNTTRESPONSE._serialized_end=1360
  _SABERSBMCOMMAND._serialized_start=1362
  _SABERSBMCOMMAND._serialized_end=1431
  _SABERSBMRESPONSE._serialized_start=1433
  _SABERSBMRESPONSE._serialized_end=1506
  _KEYGENCOMMAND._serialized_start=1508
  _KEYGENCOMMAND._serialized_end=1576
  _KEYGENRESPONSE._serialized_start=1578
  _KEYGENRESPONSE._serialized_end=1633
  _ENCAPSULATECOMMAND._serialized_start=1635
  _ENCAPSULATECOMMAND._serialized_end=1716
  _ENCAPSULATERESPONSE._serialized_start=1718
  _ENCAPSULATERESPONSE._serialized_end=1798
  _DECAPSULATECOMMAND._serialized_start=1800
  _DECAPSULATECOMMAND._serialized_end=1898
  _DECAPSULATERESPONSE._serialized_start=1900
  _DECAPSULATERESPONSE._serialized_end=1980
  _SIGNCOMMAND._serialized_start=1982
  _SIGNCOMMAND._serialized_end=2070
  _SIGNRESPONSE._serialized_start=2072
  _SIGNRESPONSE._serialized_end=2138
  _VERIFYCOMMAND._serialized_start=2140
  _VERIFYCOMMAND._serialized_end=2242
  _VERIFYRESPONSE._serialized_start=2244
  _VERIFYRESPONSE._serialized_end=2317
  _ENCRYPTCOMMAND._serialized_start=2319
  _ENCRYPTCOMMAND._serialized_end=2361
  _ENCRYPTRESPONSE._serialized_start=2363
  _ENCRYPTRESPONSE._serialized_end=2436
  _DECRYPTCOMMAND._serialized_start=2438
  _DECRYPTCOMMAND._serialized_end=2484
  _DECRYPTRESPONSE._serialized_start=2486
  _DECRYPTRESPONSE._serialized_end=2572
# @@protoc_insertion_point(module_scope)
